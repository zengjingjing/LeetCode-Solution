/****************************************************************************************************
Solution:
******************************************************************************************************/

#include <iostream>
#include <string>
#include <vector>

using namespace std;


void test()
{
}
int main()
{
test();
	system("pause");
	return 1;
}



/******************链表相关**************************/
链表定义：
struct ListNode 
{
     int val;
     ListNode *next;
     ListNode(int x) : val(x), next(NULL) {}
 };




1.创建链表
ListNode * BuildList(vector<int>& nums)
{
	ListNode * head = NULL;
	int size = nums.size();
	if(size == 0)return head;
	ListNode* tail = NULL;
	for(int i = 0; i < size; i++)
	{
		if(head == NULL)
		{
			head = new ListNode(nums[i]);
			tail = head;
		}
		else
		{
			ListNode * node = new ListNode(nums[i]);
			tail->next = node;
			tail = node;
		}
	}
	tail->next = NULL;	
	return head;
}




2.输出链表
void Output(ListNode* head)
{
	while(head)
	{
		cout << head->val << endl;
		head = head->next;
	}
	return ;
}


/******************tree相关**************************/

1.创建tree


